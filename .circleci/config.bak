version: 2.1

############
# Workflows
############
workflows:
  version: 2
  build-deploy:
    jobs:
      - build

##################
# Job Definitions
##################
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium in background
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log selenium.log
          background: true
      - restore_cache:
          key: deps2-{{ checksum "requirements/dev.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps2-{{ checksum "requirements/dev.txt" }}
          paths:
            - 'venv'
      - run:
          command: |
            . venv/bin/activate
            python manage.py test
#  deploy:
#    executor: heroku/default
#    steps:
#      - checkout
#      - add_ssh_keys:
#          fingerprints:
#            - '48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4'
#      - heroku/install
#      - heroku/deploy-via-git:
#          force: true


build_push_image_cloud_run_mangaged:
  docker:
    - image: circleci/python:3.6.2-stretch-browsers
  steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        name: Build app binary and Docker image
        command: |
          echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
          echo ${GCP_PROJECT_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
          echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
          echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
          echo 'export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV && source $BASH_ENV
          pip install --user -r requirements.txt
          pyinstaller -F hello_world.py
          docker build -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME:$TAG .
    - gcp-gcr/gcr-auth:
        gcloud-service-key: GOOGLE_CLOUD_KEYS
        google-project-id: GOOGLE_PROJECT_ID
        google-compute-zone: GOOGLE_COMPUTE_ZONE
    - gcp-gcr/push-image:
        google-project-id: GOOGLE_PROJECT_ID
        registry-url: "us.gcr.io"
        image: $IMAGE_NAME
    - cloudrun/deploy:
        platform: "managed"
        image: "us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME"
        service-name: "orb-gcp-cloud-run"
        region: $GOOGLE_COMPUTE_ZONE
        unauthenticated: true
